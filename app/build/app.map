{"version":3,"sources":["webpack:///./src/bootstrap.ts","webpack:///./src/app/app.ts","webpack:///./src/app/components/backend.display.component.ts","webpack:///./src/app/service/dictionary.service.ts","webpack:///./~/rxjs/add/operator/map.js","webpack:///./~/rxjs/operator/map.js"],"names":[],"mappings":";;;;;;AAAA,qCAAwB,CAA2B,CAAC;AAEpD,kCAA6B,GAAe,CAAC;AAE7C,kCAAiC;AACjC,wCAAsC,GAA8B,CAAC;AACrE,iCAAgC;AAChC,iDAAgD;AAEhD,iCAAkB,GAAW,CAAC;AAE9B,qDAAoD;AAEpD;KACC,MAAM,CAAC,mBAAS,CAAC,SAAG,EAAE;SACrB,qBAAc;SACd,oCAAuB,CAAC,uBAAuB;MAC/C,CAAC;UACD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;AACnC,EAAC;AANe,aAAI,OAMnB;AAED,SAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;;;;;;;;;;;;;;;;;;ACrBpD,uDAAsC,GAAwC,CAAC;AAC/E,kCAAwB,EAAe,CAAC;AAcxC;KAAA;KACA,CAAC;KAbD;SAAC,gBAAS,CAAC;aACV,QAAQ,EAAE,KAAK;aACf,QAAQ,EAAE,iJAOT;aACD,UAAU,EAAE,CAAC,mDAAuB,CAAC;UACrC,CAAC;;YAAA;KAEF,UAAC;AAAD,EAAC;AADY,YAAG,MACf;;;;;;;;;;;;;;;;;;AChBD,kCAAwB,EAAe,CAAC;AACxC,gDAAgC,GAA+B,CAAC;AAChE,qBAAO,GAAuB,CAAC;AAS/B;KAIE,iCAAoB,kBAAqC;SAArC,uBAAkB,GAAlB,kBAAkB,CAAmB;SACtD,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE;aAC1C,SAAS,CAAC,cAAI;aACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;SAC3B,CAAC,CAAC;KACN,CAAC;KAhBH;SAAC,gBAAS,CAAC;aACT,QAAQ,EAAE,iBAAiB;aAC3B,QAAQ,EAAE,wCAET;aACD,SAAS,EAAE,CAAC,sCAAiB,CAAC;UAC/B,CAAC;;gCAAA;KAYF,8BAAC;AAAD,EAAC;AAXY,gCAAuB,0BAWnC;;;;;;;;;;;;;;;;;;ACtBD,kCAAyB,EAAe,CAAC;AACzC,kCAAmB,GAAe,CAAC;AAGnC;KAEI,2BAAoB,KAAU;SAAV,UAAK,GAAL,KAAK,CAAK;KAC9B,CAAC;KAED,6CAAiB,GAAjB;SACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,wEAAwE,CAAC,CAAC;KACpG,CAAC;KARL;SAAC,iBAAU,EAAE;;0BAAA;KASb,wBAAC;AAAD,EAAC;AARY,0BAAiB,oBAQ7B;;;;;;;;ACZD;AACA;AACA;AACA;AACA,gC;;;;;;;ACJA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,IAAI;AACf,cAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,gC","file":"app.bundle.js","sourcesContent":["import {bootstrap} from 'angular2/platform/browser';\nimport {provide} from 'angular2/core';\nimport {HTTP_PROVIDERS} from 'angular2/http';\n\n// include for development builds\nimport {ELEMENT_PROBE_PROVIDERS} from 'angular2/platform/common_dom';\n// include for production builds\n// import {enableProdMode} from 'angular2/core';\n\nimport {App} from './app/app';\n\n// enableProdMode() // include for production builds\n\nexport function main() {\n\treturn bootstrap(App, [\n\t\tHTTP_PROVIDERS,\n\t\tELEMENT_PROBE_PROVIDERS // remove in production\n\t])\n\t.catch(err => console.error(err));\n}\n\ndocument.addEventListener('DOMContentLoaded', main);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/bootstrap.ts\n **/","import {BackendDisplayComponent} from \"./components/backend.display.component\";\nimport {Component} from 'angular2/core';\n\n@Component({\n\tselector: 'app',\n\ttemplate: `\n\t<div class=\"jumbotron\">\n\t\t<h1>Electron Angular2 starter</h1>\n\t</div>\n\t<div>\n\t\t<backend-display></backend-display>\n\t</div>\n\t`,\n\tdirectives: [BackendDisplayComponent]\n})\nexport class App {\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/app.ts\n **/","import {Component} from 'angular2/core';\nimport {DictionaryService} from \"../service/dictionary.service\";\nimport 'rxjs/add/operator/map';\n\n@Component({\n  selector: 'backend-display',\n  template: `\n    <h2>Preview BackendCall</h2>\n  `,\n  providers: [DictionaryService]\n})\nexport class BackendDisplayComponent{\n\n  definition;\n\n  constructor(private _dictionaryService: DictionaryService){\n     this._dictionaryService.getDataFromServer().\n      subscribe(data => {\n        console.log(data.json());\n      })\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/components/backend.display.component.ts\n **/","import {Injectable} from 'angular2/core';\nimport {Http} from 'angular2/http';\n\n@Injectable()\nexport class DictionaryService {\n\n    constructor(private _http:Http) {\n    }\n\n    getDataFromServer() {\n        return this._http.get('http://api.pearson.com/v2/dictionaries/wordwise/entries?headword=house');\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/service/dictionary.service.ts\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/map.js\n ** module id = 252\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the returned observable\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * @param {Function} project the function to create projection\n * @param {any} [thisArg] an optional argument to define what `this` is in the project function\n * @returns {Observable} a observable of projected values\n */\nfunction map(project, thisArg) {\n    if (typeof project !== 'function') {\n        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return this.lift(new MapOperator(project, thisArg));\n}\nexports.map = map;\nvar MapOperator = (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber) {\n        return new MapSubscriber(subscriber, this.project, this.thisArg);\n    };\n    return MapOperator;\n}());\nvar MapSubscriber = (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        _super.call(this, destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=map.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/map.js\n ** module id = 253\n ** module chunks = 0\n **/"],"sourceRoot":""}